{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4E96D370Eb29a3EcAe732A0DFFcD5928a02B08B3",
    "txHash": "0x645f7257bd8b598af99d931d835ad9cf5f7e3b26b5d0089abd28567837723aba"
  },
  "proxies": [
    {
      "address": "0xd6d12B3f2209FD57FD4bFf9a18A4884831D54B09",
      "txHash": "0x0182920f24ecff7834439fbc17d65df38ee4c0b3fccc66f3dfa8193cedcfa2b0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "83f5dde6e19130fbfa09c72d03926b652af5dd8b20f8b6fecabc36a2f48517a2": {
      "address": "0xba0D347C883e6Bd06711cF37dF75B76673341AE6",
      "txHash": "0x2e81c7ede2bcab0ff0c1c8adc88fce6929a1ca12db75bc787a770952a6bf6691",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13834_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4499",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13834_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13654_storage"
              }
            ]
          },
          "t_struct(Set)13654_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4499": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c0f8bfe9572ab4a7f3a90deeb66cb1750ba17a259106923ddb5268804d99cc74": {
      "address": "0x9EFC8A3A76a05c9B09675cb30ff0a96cd6aB3d3c",
      "txHash": "0xc55db0502b85249ae5152d719de105fd0a222806d6267a3b1f48891d0da1e8da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13844_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4509",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13844_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13664_storage"
              }
            ]
          },
          "t_struct(Set)13664_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4509": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cc671d644cd3bdd2422fc6175f16291264ed0e68d32a7123a00fdc4108f02565": {
      "address": "0x8295666d6536fE62e635b920AaFcbf37074f3b73",
      "txHash": "0x8cea6662624218cf3a3caf7ed8dfe0e69b5a9282680a0350e589d83e2656daf4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13832_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4497",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13832_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13652_storage"
              }
            ]
          },
          "t_struct(Set)13652_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4497": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "64957e025013960cd77b72a025f18715b2658fa6f68d88582a5146e3e332b8fb": {
      "address": "0xe84fD6531577d5820c7108b454a08aCEab985570",
      "txHash": "0x4aaf08a317b5e8b81e5cfc42626a3d59e7acd2e60c691bf4a98dcab1c8655794",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13787_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4452",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13787_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13607_storage"
              }
            ]
          },
          "t_struct(Set)13607_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4452": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "98b9ed12b2ab7ffabc2c516857051349e89c08f70424c41f07b808cde5456e7d": {
      "address": "0x98c2Df51dc11696B35037f13d5b4215A6DEe16a3",
      "txHash": "0x6aa3c68b03df5e4e87ebbaf6e3db532702d79aefbe65a3a9994438f747efd6b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13733_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4398",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13733_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13553_storage"
              }
            ]
          },
          "t_struct(Set)13553_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4398": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa94d587b4b962a8fcac154931e868f22fe39e40056d60db2ba85b40e35e4a5f": {
      "address": "0x31F2234F224d32336027cF802AA6d922cA649899",
      "txHash": "0x07ad98578e0a83949d3dbea0f79adc1eb2b8976a323a6e566c2ffa62e79a6f07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13733_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4398",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13733_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13553_storage"
              }
            ]
          },
          "t_struct(Set)13553_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4398": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6687f3327bd70bf78d27dee87c9abb5743a2aadd5731e2d70e87854dbb569a08": {
      "address": "0x549a2C7259Da39F52fB135E0471144AD85fF37A7",
      "txHash": "0x70bd2058af69d4e86699f4909b523496f390d569220fcd7fd772d76caf7e69d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13787_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4452",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13787_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13607_storage"
              }
            ]
          },
          "t_struct(Set)13607_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4452": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4f6a2a76c9c888e8968c3b39b80cb201eea4b45bf46f21bf9cffd99635c75763": {
      "address": "0xb7b73aDCedA7f95043832d1d1E62F4488Beff57f",
      "txHash": "0x18b6ea5cb9781e4b19d442cc32df12af33e32e29c777a144c4f4d616d09caeb7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13852_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4517",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13852_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13672_storage"
              }
            ]
          },
          "t_struct(Set)13672_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4517": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "492ab63b504666781f533d73c32a14b8016dc41fd6956aa06d9b2e1aa8ccafd5": {
      "address": "0xf07a11E5629FffeB8f0d191Fc54f25DC16E22201",
      "txHash": "0x362af492c3e89586fccba7c0f663db76c13a73a8f2ae4a6d76207e72a59e3fdb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13787_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4452",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13787_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13607_storage"
              }
            ]
          },
          "t_struct(Set)13607_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4452": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "44b0af93618c305ae73b1ea7163d55a149a73a5c57c3c540efab5694cf5c2b90": {
      "address": "0xA23634f40D86542421F27fBfCB268170f665444c",
      "txHash": "0x30f6879a422060e6c22ad45cbea423dc1d8c926d93777cf74193bc895f03b7a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5759_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4502",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5759_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5579_storage"
              }
            ]
          },
          "t_struct(Set)5579_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4502": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f6d4a704cb70c5e23820aa863cfc33993c375274e4dbc98c62e9dced10906bb7": {
      "address": "0xeC4336a9443d87d189A41c7d91c7CA5ca88D4Ee6",
      "txHash": "0x8eda7c68d1dfef595b1268f58796a1d3a0d29b9262a1147cf17fa83f19b6bff1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5757_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4500",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5757_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5577_storage"
              }
            ]
          },
          "t_struct(Set)5577_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4500": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b7ccb38ac04ba8d1cc64b32e134483162aa8b251a08476ea5505c7e016024c3a": {
      "address": "0x0cee24963340175787CD81C4e3a60DD5cFDAC77c",
      "txHash": "0x68f2ead73931d97e8925ae7aea771753d57ae22f18ff7a93ed63af890daffa16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5791_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4534",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5791_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5611_storage"
              }
            ]
          },
          "t_struct(Set)5611_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4534": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "729cafbbf194fa2a53d28ec607dc130a0cf758152c760054c8e335fea1376e2b": {
      "address": "0x2AcfFbEcFf70405E642F9F433460Ea1BCE8B2940",
      "txHash": "0xbe0311d6f3b4e5855fd25412c58d25d00ce1ef651b904af4445777c63ba6d524",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:452"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5799_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4542",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5799_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5619_storage"
              }
            ]
          },
          "t_struct(Set)5619_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4542": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}

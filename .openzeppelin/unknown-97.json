{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x70a80F1d84fCBF2e1e9934641F070D044554Bf32",
    "txHash": "0x8b0f1edc96ad669863779d19cadef3002e1e78e0c2918c72b55016bcc38666df"
  },
  "proxies": [
    {
      "address": "0x7EbDd5e47D9f2B8A39708a0166aEe2AA1f47Cb3A",
      "txHash": "0x9982670c8466371619b16f5f93dda60e032648a57a6b86c6891697eb201748f1",
      "kind": "transparent"
    },
    {
      "address": "0x4c7172D3aa21A0f2Eea23Bd50BFE7Ac33f2E3c1e",
      "txHash": "0xdc27b6092b576f55d2aa1b3b73c1aeae4539313ee7f89356ad276e54c65ef2d4",
      "kind": "transparent"
    },
    {
      "address": "0x6be0AB6f23E75F134000E7090b7342c279F20C6b",
      "txHash": "0xf44d1e8c0719a468a5d8b38360ddc39b479e80f2c9c681519a81b0b688b40116",
      "kind": "transparent"
    },
    {
      "address": "0xD4D38d9Ab71353061b6aC1B087217CDa5E5F1AE5",
      "txHash": "0xaca19909a029724a205fafff30f9cb2b07f91bcbe21d252e910e425b68a43533",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d0c61651d44bdc7a959e75028332992de481308b8d44fb190241dc4d4a95664f": {
      "address": "0xd015D8f051Fff15DF781270c515a27B9b7e425d5",
      "txHash": "0x164c0ce3cffae7a816e44a29f914a01da2e45d433831d703f5e6d2aceaa94129",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:19"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:20"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5912_storage",
            "src": "PepeToken.sol:29"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:34"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:35"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:39"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4573",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:42"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:47"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:56"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:59"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:70"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5912_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5732_storage"
              }
            ]
          },
          "t_struct(Set)5732_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4573": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b1695073a648df78ee716e22a96df8826556cdc8b4f8cd39721bd97247585339": {
      "address": "0xD09f5e43F21717FBe46283Cd643C3C4659b2f8e6",
      "txHash": "0x5deb3bf675a186e83feb8c3c295ea422f21c31edf03b08d1ab5d0ee23c39987f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:19"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:20"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5912_storage",
            "src": "PepeToken.sol:29"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:34"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:35"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:39"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4573",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:42"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:47"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:56"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:59"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:70"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5912_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5732_storage"
              }
            ]
          },
          "t_struct(Set)5732_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4573": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1e784680eca0f0e681ba0ac94a23044ac1805e570990f2127564523fb37e54f2": {
      "address": "0xeAC10037EE53888D5bA20222529fbcbFf99907F5",
      "txHash": "0xdf2c49efc43a3db08a1a4695cbcaf5392674afbe2e80771d60548f8de68ef3e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:19"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:20"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5912_storage",
            "src": "PepeToken.sol:29"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:34"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:35"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:39"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4573",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:42"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:47"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:56"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:59"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:70"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5912_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5732_storage"
              }
            ]
          },
          "t_struct(Set)5732_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4573": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2619fb89a1ae61fc0f4a9054da526c2a9f58b6f2477ee3f0932f89ae1ceb1a73": {
      "address": "0x9bF7bcDfaa9D8F7F35705D9397ebf72b2C5F756e",
      "txHash": "0xef5a6a6c88034698217d6ef71f2b5265d2a83616190f90bad1c917779da8070f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)13991_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4574",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:54"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13991_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13811_storage"
              }
            ]
          },
          "t_struct(Set)13811_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4574": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b481816cef09c7c167d880d69ed3d8965acd29da1cde186cd80d6b49f3318c7": {
      "address": "0x86FB38815Bf4D4234D70E5283Dce519dEB034bcF",
      "txHash": "0xfd050dec354d4b18c975c1960fd7bf93c324b8bd2ff19ac4c350239e1e7cbad7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5912_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4573",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:54"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5912_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5732_storage"
              }
            ]
          },
          "t_struct(Set)5732_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4573": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dd278b3d2b100299f6f26ae633e82071f6cd2949088fe449be3fe81810127953": {
      "address": "0x21eFc2A304Aa68CeA85F4a823930a6187DeBD1D5",
      "txHash": "0xfea2fb6528017afed3b88244986ccd71bf25ea7b99239f24751f2b11d5116fff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:22"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:27"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5912_storage",
            "src": "PepeToken.sol:31"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:37"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:40"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)4573",
            "src": "PepeToken.sol:43"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:54"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:55"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:58"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:64"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:66"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentageExceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:68"
          },
          {
            "contract": "PepeToken",
            "label": "_sellLimitAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_busdAddress",
            "type": "t_address",
            "src": "PepeToken.sol:71"
          },
          {
            "contract": "PepeToken",
            "label": "_btcAddress",
            "type": "t_address",
            "src": "PepeToken.sol:72"
          },
          {
            "contract": "PepeToken",
            "label": "_xbnAddress",
            "type": "t_address",
            "src": "PepeToken.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5912_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5732_storage"
              }
            ]
          },
          "t_struct(Set)5732_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)4573": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}

{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD7D97386a245848Ef97e0A81Ee3fF74066d081f9",
    "txHash": "0x02db4b664f6475b16a332312a57cc12ea828980bb6dfce61ae1fdbf9736fd2ff"
  },
  "proxies": [
    {
      "address": "0xe67E241BaCffb868b76e22A998d607B7129D1c1c",
      "txHash": "0xa4482e90c90732cac8b841072516479e01c77ac14266c65207c14d12889d4f73",
      "kind": "transparent"
    },
    {
      "address": "0xd1F12DbFa8D4A9319eA4e8E8deB54056ABD8a23e",
      "txHash": "0x5ae74308f7d58c087af729f69d7c5e3c529ae8e1d437b6f6dc5089c72432f2df",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fd1874fc25b806bc0962fd368088a2e51630e37083b5c4e9b4f926b4cc868d52": {
      "address": "0x95a2DFC6043E9906D224a5D4879Ff8B486D1ae7D",
      "txHash": "0xd860b3ed2c249c2c4fd4ee7525f69c6043906a194fd2c18fa878924e2b6db3f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:74"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:75"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:76"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:78"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:79"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3943",
            "src": "PepeToken.sol:81"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:82"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:84"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:86"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:87"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:88"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:89"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:90"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:91"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:92"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:93"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:94"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:96"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:97"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:99"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:100"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:101"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:103"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:105"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:106"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3943": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3091b33625f3f146a86354fb6d5ce498887e7be3273ea30bce7029942ee67953": {
      "address": "0x70C482a81DA64E04c00810248b29320A22837A81",
      "txHash": "0x770004169a2e2e5dd0851199a41f1aa189452af08a876a657fc29d7bbfbfa7fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:74"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:75"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:76"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:78"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:79"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3943",
            "src": "PepeToken.sol:81"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:82"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:84"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:86"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:87"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:88"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:89"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:90"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:91"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:92"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:93"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:94"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:96"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:97"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:99"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:100"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:101"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:103"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:105"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:106"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3943": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1647c08b79eaca3800930b0f265419e74c174fd79402217dc3204d18be3e69f7": {
      "address": "0x71b943674837826f66D8fE1356BaD10C8c7b29d0",
      "txHash": "0x2e4af993cd777917facd9277264deb6c4be792f334581086500dc17c71388e06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:74"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:75"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:76"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:78"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:79"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3907",
            "src": "PepeToken.sol:81"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:82"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:84"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:86"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:87"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:88"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:89"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:90"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:91"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:92"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:93"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:94"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:96"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:97"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:99"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:100"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:101"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:103"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:105"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:106"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3907": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa4def7e1fa2514317fb6aed7a46f25e2fc5b1e673afb1174436663e54649eb9": {
      "address": "0xb87fA803eb61c362EE55df8cfA874f582D59b668",
      "txHash": "0xdbb3dcfe89f3232551d6c69b98ca6eb230aa6f27c26764fd2ba579391ae75f20",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:74"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:75"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:76"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:78"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:79"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3916",
            "src": "PepeToken.sol:81"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:82"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:84"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:86"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:87"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:88"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:89"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:90"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:91"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:92"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:93"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:94"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:96"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:97"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:99"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:100"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:101"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:103"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:105"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:106"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3916": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ad08abd2c7ccdbed624cc1f420c4356908dd23ae93f48540bf516d4788ab38fe": {
      "address": "0x7B84A8cABb9067A2f41c73944254ED12b0dF2652",
      "txHash": "0x5f0b416b3622452140b523d1e4fc89f6af515b5e78f9eb676ee90bf7aabfe84d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:74"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:75"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:76"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:78"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:79"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3912",
            "src": "PepeToken.sol:81"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:82"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:84"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:86"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:87"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:88"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:89"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:90"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:91"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:92"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:93"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:94"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:96"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:97"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:99"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:100"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:101"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:103"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:105"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:106"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3912": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3488a0d2071f6b3cbdb1c0aac1f5bcc4ee9b63d69d6b423f0ca2d68a7eb623ba": {
      "address": "0x88316ECf8E72672F3275f0d43785127fb5bF54d3",
      "txHash": "0xfd1d59a2ea4eb8122a9153202f089a653341368443e352040a68fe4205d5b9d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:62"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:67"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "PepeToken.sol:69"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:74"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:75"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:76"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:78"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:79"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3912",
            "src": "PepeToken.sol:81"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:82"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:84"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:86"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:87"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:88"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:89"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:90"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:91"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:92"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:93"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:94"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:96"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:97"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:99"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:100"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:101"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:103"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:105"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:106"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3912": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0198dca3c93f1c2cbab7093b112fc8cdd000db8c534d03ffac580e3b056fed3a": {
      "address": "0x9977dF17D64C628Cd8601Ad61120510b49a8c93e",
      "txHash": "0x5f8ea6c940736a6bc8c31e01a979b7fb35d46e290e60c57132f176af97c6637a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:19"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:20"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5024_storage",
            "src": "PepeToken.sol:29"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:34"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:35"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:39"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3889",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:42"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:47"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:54"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:56"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:59"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:66"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5024_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4844_storage"
              }
            ]
          },
          "t_struct(Set)4844_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3889": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b83ae223fca49321da9ddb79d04396e961ed1d11055823746a3bcbfc1c7eb6c2": {
      "address": "0x8a2F068a0D8B040c4fa83d96e233E9DC667e6944",
      "txHash": "0x1cae74195b805114f7d141479b423cf4849281f63a069ed77eb1421fe2cb62fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:19"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:20"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5024_storage",
            "src": "PepeToken.sol:29"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:34"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:35"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:39"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3889",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:42"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:47"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:54"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:56"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:59"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:66"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5024_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4844_storage"
              }
            ]
          },
          "t_struct(Set)4844_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3889": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8a6941977beb00ddbc632d3a7c5c213a5c3275ea25c86d11774dfa7acff8ca45": {
      "address": "0xe676D231419101C583288Cd2CD6969FF25c61c31",
      "txHash": "0xaa0e7c35c656be7aed08850de02847aa0294e0c07ae0c8f8f2eadbb438c40d0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:19"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:20"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5024_storage",
            "src": "PepeToken.sol:29"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:34"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:35"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:39"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3889",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:42"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:47"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:54"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:56"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:59"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:66"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5024_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4844_storage"
              }
            ]
          },
          "t_struct(Set)4844_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3889": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "268db9348c8715a415e26b330cf28188c65a91d1599d3f3c18ee277afeaf5955": {
      "address": "0xd86Da3b666A365034fA4F2e2775e87eBE362a403",
      "txHash": "0xdc57e7831f7cd956246a3c1a3e2788b6c28c60d356191e0f835a1ad92180ee50",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "bep/BepLib.sol:99"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "bep/BepLib.sol:101"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "bep/BepLib.sol:103"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:105"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "bep/BepLib.sol:106"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "bep/BepLib.sol:107"
          },
          {
            "contract": "IBEP20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "bep/BepLib.sol:451"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:19"
          },
          {
            "contract": "PepeToken",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:20"
          },
          {
            "contract": "PepeToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "PepeToken.sol:21"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:23"
          },
          {
            "contract": "PepeToken",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:25"
          },
          {
            "contract": "PepeToken",
            "label": "_excluded",
            "type": "t_struct(AddressSet)5024_storage",
            "src": "PepeToken.sol:29"
          },
          {
            "contract": "PepeToken",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:34"
          },
          {
            "contract": "PepeToken",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:35"
          },
          {
            "contract": "PepeToken",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "PepeToken.sol:36"
          },
          {
            "contract": "PepeToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "PepeToken.sol:38"
          },
          {
            "contract": "PepeToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "PepeToken.sol:39"
          },
          {
            "contract": "PepeToken",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)3889",
            "src": "PepeToken.sol:41"
          },
          {
            "contract": "PepeToken",
            "label": "pancakePair",
            "type": "t_address",
            "src": "PepeToken.sol:42"
          },
          {
            "contract": "PepeToken",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "PepeToken.sol:44"
          },
          {
            "contract": "PepeToken",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "PepeToken.sol:46"
          },
          {
            "contract": "PepeToken",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "PepeToken.sol:47"
          },
          {
            "contract": "PepeToken",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "PepeToken.sol:48"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveCoverageFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:49"
          },
          {
            "contract": "PepeToken",
            "label": "nextAvailableClaimDate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "PepeToken.sol:50"
          },
          {
            "contract": "PepeToken",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "PepeToken.sol:51"
          },
          {
            "contract": "PepeToken",
            "label": "disruptiveTransferEnabledFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:52"
          },
          {
            "contract": "PepeToken",
            "label": "disableEasyRewardFrom",
            "type": "t_uint256",
            "src": "PepeToken.sol:53"
          },
          {
            "contract": "PepeToken",
            "label": "winningDoubleRewardPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:54"
          },
          {
            "contract": "PepeToken",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:56"
          },
          {
            "contract": "PepeToken",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:57"
          },
          {
            "contract": "PepeToken",
            "label": "_liquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:59"
          },
          {
            "contract": "PepeToken",
            "label": "_previousLiquidityFee",
            "type": "t_uint256",
            "src": "PepeToken.sol:60"
          },
          {
            "contract": "PepeToken",
            "label": "rewardThreshold",
            "type": "t_uint256",
            "src": "PepeToken.sol:61"
          },
          {
            "contract": "PepeToken",
            "label": "minTokenNumberToSell",
            "type": "t_uint256",
            "src": "PepeToken.sol:63"
          },
          {
            "contract": "PepeToken",
            "label": "_limitHoldPercentage",
            "type": "t_uint256",
            "src": "PepeToken.sol:65"
          },
          {
            "contract": "PepeToken",
            "label": "_blockAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "PepeToken.sol:66"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5024_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4844_storage"
              }
            ]
          },
          "t_struct(Set)4844_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IPancakeRouter02)3889": {
            "label": "contract IPancakeRouter02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
